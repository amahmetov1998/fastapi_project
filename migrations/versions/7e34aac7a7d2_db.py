"""DB

Revision ID: 7e34aac7a7d2
Revises: 
Create Date: 2024-06-08 00:55:40.426805

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils

# revision identifiers, used by Alembic.
revision: str = '7e34aac7a7d2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mail', sa.String(length=30), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('mail')
    )
    op.create_table('company',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_name', sa.String(length=30), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('company_name')
    )
    op.create_table('position',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=30), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('deadline', sa.String(length=30), nullable=False),
    sa.Column('status', sa.String(length=30), nullable=False),
    sa.Column('time_estimation', sa.String(length=30), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('invite',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.Integer(), nullable=False),
    sa.Column('temp_mail', sa.String(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('temp_mail')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=30), nullable=False),
    sa.Column('last_name', sa.String(length=30), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('task_author_id', sa.Integer(), nullable=True),
    sa.Column('task_responsible_id', sa.Integer(), nullable=True),
    sa.Column('task_observer_id', sa.Integer(), nullable=True),
    sa.Column('task_executor_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['task_author_id'], ['task.id'], ),
    sa.ForeignKeyConstraint(['task_executor_id'], ['task.id'], ),
    sa.ForeignKeyConstraint(['task_observer_id'], ['task.id'], ),
    sa.ForeignKeyConstraint(['task_responsible_id'], ['task.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('task_author_id'),
    sa.UniqueConstraint('task_responsible_id')
    )
    op.create_table('members',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('secrets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('password', sa.LargeBinary(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('account_id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('users_positions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('position_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['position_id'], ['position.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('position_id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('struct_adm',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('path', sqlalchemy_utils.types.ltree.LtreeType(), nullable=False),
    sa.Column('user_position_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_position_id'], ['users_positions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_user_path', 'struct_adm', ['path'], unique=False, postgresql_using='gist')
    op.create_table('struct_adm_positions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('struct_adm_id', sa.Integer(), nullable=False),
    sa.Column('position_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['position_id'], ['position.id'], ),
    sa.ForeignKeyConstraint(['struct_adm_id'], ['struct_adm.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('position_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('struct_adm_positions')
    op.drop_index('ix_user_path', table_name='struct_adm', postgresql_using='gist')
    op.drop_table('struct_adm')
    op.drop_table('users_positions')
    op.drop_table('secrets')
    op.drop_table('members')
    op.drop_table('user')
    op.drop_table('invite')
    op.drop_table('task')
    op.drop_table('position')
    op.drop_table('company')
    op.drop_table('account')
    # ### end Alembic commands ###
